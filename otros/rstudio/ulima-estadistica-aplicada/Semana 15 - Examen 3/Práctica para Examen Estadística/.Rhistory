### Pregunta 1
data <- read.delim("clipboard")
data
### Pregunta 1
data1 <- read.delim("clipboard")
data1
### Pregunta 1
data1 <- read.delim("clipboard")
data1
diseño1 <- lm(Tiempo~Algoritmo, data=data1)
anova(diseño1)
shapiro.test(diseño1$residuals)
bartlett.test(Tiempo~Algortimo, data=data1)
bartlett.test(Tiempo~Algoritmo, data=data1)
tapply(data1$Tiempo, data1$Algoritmo, FUN = mean)
TukeyHSD(aov(diseño1), conf.level = 0.95)
data <- read.delim("clipboard")
data2 <- read.delim("clipboard")
data2
modelo1 <- lm(Tiempo~ Recubrimiento + Lote, data=data2) # cuando se le agrega el bloque, se vuelve en DBCA
anova(modelo1)
# b)
# COMPARACIONES MÚLTIPLES
# Método de Tukey
tapply(data2$Tiempo, data2$Recubrimiento, mean)
# b)
# COMPARACIONES MÚLTIPLES
# Método de Tukey
tapply(data2$Tiempo, data2$Recubrimiento, mean)
TukeyHSD(aov(modelo1), conf.level = 0.95) # me interesa solo los bloques
shapiro.test(modelo1$residuals)
library(car)
ncvTest(modelo1)
data3 <- read.delim("clipboard")
data3
library(ggpubr)
library(agricolae)
dat <- read.delim("clipboard")
dat
# Tranformamos en factor los factores
dat$Procesador <- factor(dat$Procesador)
dat$Carga <- factor(dat$Carga)
# a) Supuestos de normalidad, homogeneidad y ANALISIS DE VARIANZA
#------------------------------------------------------------------#
#                        Preba de Shapiro Wilk (normalidad)                    #
#------------------------------------------------------------------#
shapiro.test(rstandard(aov(Tiempo ~ Procesador*Carga,data=dat)))
library(car)
ncvTest(lm(Tiempo ~ Procesador*Carga,data=dat))
#------------------------------------------------------------------#
#                         Análisis de varianza                     #
#------------------------------------------------------------------#
# H0: ab = 0 (no hay interaccion)
# H1: ab != 0 (si hay interaccion)
modelo = aov(lm(Tiempo ~ Procesador*Carga,data=dat))
summary(modelo)
b=HSD.test(aov(Tiempo ~ Procesador*Carga,data=dat),
c("Procesador","Carga"),group=FALSE)[4]
b
a=HSD.test(aov(Tiempo ~ Procesador*Carga,data=dat ),
c("Procesador","Carga"),group=TRUE)[5]
a
d=HSD.test(aov(Tiempo ~ Procesador*Carga,data=dat ),
c("Procesador"),group=TRUE)[5]
d
e=HSD.test(aov(Tiempo ~ Procesador*Carga,data=dat),
c("Carga"),group=FALSE)[4]
e
e=HSD.test(aov(Tiempo ~ Procesador*Carga,data=dat),
c("Procesador"),group=FALSE)[4]
e
f=HSD.test(aov(Tiempo ~ Procesador*Carga,data=dat ),
c("Carga"),group=TRUE)[5]
f
f
c=HSD.test(aov(Tiempo ~ Procesador*Carga,data=dat),
c("Carga"),group=FALSE)[4]
c
#------------------------------------------------------------------#
#                         Análisis de varianza                     #
#------------------------------------------------------------------#
# H0: ab = 0 (no hay interaccion)
# H1: ab != 0 (si hay interaccion)
modelo = aov(lm(Tiempo ~ Procesador*Carga,data=dat))
summary(modelo)
a=HSD.test(aov(Tiempo ~ Procesador*Carga,data=dat ),
c("Procesador","Carga"),group=TRUE)[5]
a
#------------------------------------------------------------------#
#                         Análisis de varianza                     #
#------------------------------------------------------------------#
# H0: ab = 0 (no hay interaccion)
# H1: ab != 0 (si hay interaccion)
modelo = aov(lm(Tiempo ~ Procesador*Carga,data=dat))
summary(modelo)
e=HSD.test(aov(Tiempo ~ Procesador*Carga,data=dat),
c("Procesador"),group=FALSE)[4]
e
c=HSD.test(aov(Tiempo ~ Procesador*Carga,data=dat),
c("Carga"),group=FALSE)[4]
c
